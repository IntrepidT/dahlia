ame: Build and Deploy to Google Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SQLX_OFFLINE: true
  DATABASE_URL: postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/dahlia
  PROJECT_ID: e-analogy-453217-e1
  REGION: us-central1
  SERVICE: dahlia

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: postgres
          POSTGRES_DB: dahlia
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          targets: wasm32-unknown-unknown

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: cargo test

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with: 
          project_id: e-analogy-453217-e1
          export_default_credentials: true

      - name: Build and Push Docker image with Cloud Build
        run: |
          gcloud builds submit --tag gcr.io/$PROJECT_ID/$SERVICE --timeout=30m

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE \
            --image gcr.io/$PROJECT_ID/$SERVICE \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --add-cloudsql-instances=${{ secrets.CLOUD_SQL_CONNECTION_NAME }} \
            --set-env-vars="DATABASE_URL=postgres://postgres:${{ secrets.POSTGRES_PASSWORD }}@127.0.0.1:5432/dahlia,LEPTOS_SITE_ADDR=0.0.0.0:8080,LEPTOS_SITE_ROOT=./site,RUST_LOG=info"
